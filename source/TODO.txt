Queue:
En cab-knapp == opp OG ned trykket i samme etasje; dette kan forenkle k√∏systemet betraktlig

Flytt execute next action switch fra main til egen funksjon i elevator_fsm

TODO 20.02
Bugfixes
update at_floor to be get_floor(int last) (gets the last or current floor)
Function name changes (consistency!!!)?
Clean up comments (put in separate txt file for now)
Potential cleanup of init?
Clean up helper functions (remove/simplify) 
    button lights
    floor diff
    check queue for order ???
Update documentation

Optimalization
    Try to develop logic that first check if all orders are in wrong direction, and then goto the floor furthest away


Instead of returning an ACTION enum val from FSM, change a function pointer to a specific function
that executes what we have in the switch in main.c already.

KNOWN BUGS:


If the elevator gets a stop signal when it is between two floors, it does not know which direction to travel in when it
recieves an order. Tried to fix it with a couple of if, but it will just go straight up into the physical switch/stop.
The original code works relativly well, however it may not detect the new order and do the appropriate action to fullfill
the order



Functions we can delete:
-erase_single_order: not used once in the entire program


Failed tests:
O2, sometimes this fuckes up (may be fixed)
D1, when the QUEUE is almost empty. The works as long as it is at least two orders in the queue
D4, the timer is fucked
H1, right after the STOP-button has been pressed between floors, the elevator will not take new orders into the queue 


